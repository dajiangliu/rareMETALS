RVMETA.CMH <- function(scenario=c('gene','region'),score.stat.file,cov.file,gene,test='GRANVIL',maf.cutoff,no.boot=10000,alternative=c('two.sided','greater','less'),alpha=0.05,extra.pars=list())
  {
    capture.output(raw.data.all <- rvmeta.readData( score.stat.file, cov.file, gene));
    if(length(raw.data.all)==0)
      return(list(p.value=NA,
                  statistic=NA,
                  no.var=NA,
                  no.sample=NA));
    res <- list();
    gene.name <- names(raw.data.all);
    p.value <- double(0);
    statistic <- double(0);pos <- integer(0);anno <- character(0);direction <- integer(0);res.maf.vec <- double(0);beta1.est.vec <- double(0);beta1.sd.vec <- double(0);
    for(kk in 1:length(raw.data.all))
      {
        raw.data <- raw.data.all[[kk]];
        if(scenario=='gene') 
          {
            ix.var <- integer(0);
            if(length(raw.data$stat[[1]])>0)
              {
                ix.var <- 1:length(raw.data$stat[[1]])
              }
          }
        if(scenario=='NS')
          {
            ix.var <- integer(0);
            ix.var <- c(ix.var,grep('Nonsynonymous',raw.data$anno));
            ix.var <- sort(unique(ix.var));
          }
        if(scenario=='LOF')
          {
            ix.var <- integer(0);
            ix.var <- c(ix.var,grep('Stop_Gain',raw.data$anno));
            ix.var <- sort(unique(ix.var));
          }
        
        if(scenario=='NS-LOF')
          {
            ix.var <- integer(0);
            ix.var <- c(ix.var,grep('Stop_Gain|Nonsynonymous',raw.data$anno));
            ix.var <- sort(unique(ix.var));
          }
        if(scenario=='region')
          {
            raw.data <- NULL;
            stop("region based meta analysis has not been implemented in this software");
          }
        if(length(ix.var)<2 & test!='SINGLE') {
          res[[kk]] <- list(gene.name=gene.name[kk],
                            p.value=NA,
                            statistic=NA,
                            no.var=NA,
                            no.sample=NA,
                            anno=NA,
                            pos=NA);
        }
        if(length(ix.var)>=2) {
          ix.pop <- 1:length(raw.data$nSample);
          score.stat.vec.list <- list();maf.vec.list <- list();cov.mat.list <- list();var.Y.list <- list();N.list <- list();mean.Y.list <- list();pos.list <- list();anno.list <- list();        
          for(ii in 1:length(ix.pop))
            {
              score.stat.vec.list[[ii]] <- rm.na((sqrt((raw.data$stat[[ii]])[ix.var])*((raw.data$direction[[ii]])[ix.var])));
              N.list[[ii]] <- as.integer(mean(raw.data$nSample[[ii]],na.rm=TRUE));
              cov.mat.list[[ii]] <- rm.na(as.matrix((raw.data$cov[[ii]])[ix.var,ix.var]));
              ix.0 <- which(raw.data$maf[[ii]]==0);
              if(length(ix.0)>0)
                {
                  raw.data$maf[[ii]][ix.0] <- 1;
                }
              var.Y.list[[ii]] <- 1;
              mean.Y.list[[ii]] <- 0;
              ##print('raw');
              ##print(raw.data$maf[[ii]][ix.var]);
              maf.vec.list[[ii]] <- rm.na((1-raw.data$maf[[ii]])[ix.var]);
              ##print('rvmeta')
              ##print(maf.vec.list[[ii]]);
              pos.list[[ii]] <- (raw.data$pos)[ix.var];
              anno.list[[ii]] <- (raw.data$anno)[ix.var];
            }
          maf.vec <- rep(0,length(maf.vec.list[[1]]));
          for(ii in 1:length(ix.pop))
            {
              maf.vec <- maf.vec+(maf.vec.list[[ii]])*(2*N.list[[ii]]);
            }
          maf.vec <- maf.vec/sum(2*unlist(N.list));
          ##ix.flip <- which(maf.vec>1/2);
          ##if(length(ix.flip)>1)
          ##  {
          ##   maf.vec[ix.flip] <- 1-maf.vec[ix.flip];
          ##    for(ii in 1:length(maf.vec.list))
          ##     {
          ##        maf.vec.list[[ii]][ix.flip] <- 1-(maf.vec.list[[ii]][ix.flip]);
          ##      }
          ## }
          ix.rare <- which(maf.vec<maf.cutoff);
          if(length(ix.rare)>1)
            {
              for(ii in 1:length(ix.pop))
                {
                  score.stat.vec.list[[ii]] <- score.stat.vec.list[[ii]][ix.rare];
                  cov.mat.list[[ii]] <- cov.mat.list[[ii]][ix.rare,ix.rare];
                  maf.vec.list[[ii]] <- maf.vec.list[[ii]][ix.rare];
                  anno.list[[ii]] <- anno.list[[ii]][ix.rare];
                  pos.list[[ii]] <- pos.list[[ii]][ix.rare];
                }
              if(test=='WSS')
                {
                  res.kk <- (c(rvmeta.CMH(score.stat.vec.list,maf.vec.list,cov.mat.list,var.Y.list,N.list,alternative,no.boot,alpha,rv.test='WSS',extra.pars=list(weight='MB'))));
                  res[[kk]] <- c(res.kk,
                                 list(anno=anno.list[[1]],
                                      pos=pos.list[[1]],
                                      gene.name=gene.name[kk]));
                }
              if(test=='GRANVIL')
                {
                  res.kk <- (c(rvmeta.CMH(score.stat.vec.list,maf.vec.list,cov.mat.list,var.Y.list,N.list,alternative,no.boot,alpha,rv.test='WSS',extra.pars=list(weight='MZ'))));
                  res[[kk]] <- c(res.kk,
                                 list(anno=anno.list[[1]],
                                      pos=pos.list[[1]],
                                      gene.name=gene.name[kk]));             
                }
              if(test=='SKAT-O')
                {
                  res.kk <- (c(rvmeta.CMH(score.stat.vec.list,maf.vec.list,cov.mat.list,var.Y.list,N.list,alternative,no.boot,alpha,rv.test='SKAT',extra.pars=list(kernel='optimal-beta'))));
                  res[[kk]] <- c(res.kk,
                                 list(anno=anno.list[[1]],
                                      pos=pos.list[[1]],
                                      gene.name=gene.name[kk]));
                }
              if(test=='SKAT')
                {
                  res.kk <- (c(rvmeta.CMH(score.stat.vec.list,maf.vec.list,cov.mat.list,var.Y.list,N.list,alternative,no.boot,alpha,rv.test='SKAT',extra.pars=list(kernel='beta'))));
                  res[[kk]] <- c(res.kk,
                                 list(anno=anno.list[[1]],
                                      pos=pos.list[[1]],
                                      gene.name=gene.name[kk]));
                }     
              if(test=='VT')
                {
                  res.kk <- (c(rvmeta.CMH(score.stat.vec.list,maf.vec.list,cov.mat.list,var.Y.list,N.list,alternative,no.boot,alpha,rv.test='VT',extra.pars=list())));
                  res.kk$no.site <- length(which(maf.vec<(res.kk$maf.cutoff)));
                  res[[kk]] <- c(res.kk,
                                 list(anno=anno.list[[1]],
                                      pos=pos.list[[1]],
                                      gene.name=gene.name[kk]));
                }
              if(test=='SINGLE')
                {
                  res.kk <- rvmeta.approx.mega(score.stat.vec.list,maf.vec.list,cov.mat.list,mean.Y.list,var.Y.list,N.list,alternative,no.boot,alpha,rv.test='SINGLE',extra.pars=list());
                  res.kk.CMH <- rvmeta.CMH(score.stat.vec.list,maf.vec.list,cov.mat.list,var.Y.list,N.list,alternative,no.boot,alpha,rv.test='SINGLE',extra.pars=list());
                  statistic <- c(statistic,res.kk.CMH$statistic);
                  p.value <- c(p.value,res.kk.CMH$p.value);
                  direction <- c(direction,res.kk$direction);
                  res.maf.vec <- c(res.maf.vec,res.kk$maf.vec);
                  beta1.est.vec <- c(beta1.est.vec,res.kk$beta1.est);
                  beta1.sd.vec <- c(beta1.sd.vec,res.kk$beta1.sd);
                  ix.rm <- res.kk$ix.rm;
                  
                  if(length(ix.rm)>0)
                    {
                      anno.list[[1]] <- anno.list[[1]][-ix.rm];
                      pos.list[[1]] <- pos.list[[1]][-ix.rm];
                    }
                  anno <- c(anno,anno.list[[1]]);
                  pos <- c(pos,pos.list[[1]]);
              
                }
            }
        }
      }
    if(test=='SINGLE')
      {
        res <- list(p.value=p.value,
                    statistic=statistic,
                    direction=direction,
                    maf.vec=res.maf.vec,
                    beta1.est.vec=beta1.est.vec,
                    beta1.sd.vec=beta1.sd.vec,
                    anno=anno,
                    pos=pos,
                    raw.data.all=raw.data.all);
      
      }
    return(res);
  }

r2cov.mat <- function(r2.mat,maf.vec)
  {
    var.vec <- sqrt(maf.vec*(1-maf.vec)*2);
    var.mat <- (var.vec%*%t(var.vec));
    cov.mat <- r2.mat*var.mat;
    return(cov.mat);
  }
